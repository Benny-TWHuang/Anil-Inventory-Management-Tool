{"ast":null,"code":"var _jsxFileName = \"/home/test/Desktop/aimt/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./login/Login\";\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 2. Create our *dogImage* variable as well as the *setDogImage* function via useState\n  // We're setting the default value of dogImage to null, so that while we wait for the\n  // fetch to complete, we dont attempt to render the image\n  let [APItext, setAPItext] = useState(null);\n\n  // 3. Create out useEffect function\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.text())\n    // 4. Setting *dogImage* to the image url that we received from the response above\n    .then(data => setAPItext(data.message));\n  }, []);\n  console.log(data.message);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2UHQnlQdVCaP5nOC+nLYeh7yqnw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Login","Routes","Route","App","APItext","setAPItext","fetch","then","response","text","data","message","console","log"],"sources":["/home/test/Desktop/aimt/client/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport Login from \"./login/Login\";\nimport { Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  // 2. Create our *dogImage* variable as well as the *setDogImage* function via useState\n    // We're setting the default value of dogImage to null, so that while we wait for the\n    // fetch to complete, we dont attempt to render the image\n  let [APItext, setAPItext] = useState(null)\n\n    // 3. Create out useEffect function\n  useEffect(() => {\n    fetch(\"/api\")\n    .then(response => response.text())\n        // 4. Setting *dogImage* to the image url that we received from the response above\n    .then(data => setAPItext(data.message))\n  },[]);\n  console.log(data.message);\n\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/\" element={<h1>Hello</h1>} />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb;EACE;EACA;EACF,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACFD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,MAAM,CAAC,CACZC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE;IAC7B;IAAA,CACHF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC;EACzC,CAAC,EAAC,EAAE,CAAC;EACLC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACC,OAAO,CAAC;EAGzB,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,uBACtB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACpC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAxBQR,GAAG;AAAA,KAAHA,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}