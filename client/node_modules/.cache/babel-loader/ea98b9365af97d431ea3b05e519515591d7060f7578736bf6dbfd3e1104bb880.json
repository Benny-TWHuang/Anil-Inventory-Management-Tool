{"ast":null,"code":"var _jsxFileName = \"/home/test/Desktop/Anil-Inventory-Management-Tool/client/src/show/SortTable.js\";\nimport MaterialReactTable from 'material-react-table';\nimport { Button } from '@mui/material';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  accessorKey: 'UID',\n  header: 'UID',\n  sortDescFirst: false\n}, {\n  accessorKey: 'Product_Name',\n  header: 'Product_Name',\n  sortDescFirst: false\n}, {\n  accessorKey: 'Family',\n  header: 'Family'\n}, {\n  accessorKey: 'Status',\n  header: 'Status',\n  sortDescFirst: false\n}, {\n  accessorKey: 'Model',\n  header: 'Model'\n}, {\n  accessorKey: 'Vendor',\n  header: 'Vendor'\n}, {\n  accessorKey: 'Type',\n  header: 'Type'\n}, {\n  accessorKey: 'Speed',\n  header: 'Speed',\n  sortDescFirst: false\n}, {\n  accessorKey: 'Distance',\n  header: 'Distance'\n}, {\n  accessorKey: 'Wavelength',\n  header: 'Wavelength'\n}, {\n  accessorKey: 'Interface',\n  header: 'Interface'\n}, {\n  accessorKey: 'Item',\n  header: 'Item'\n}];\nconst SortTable = data => {\n  return /*#__PURE__*/_jsxDEV(MaterialReactTable, {\n    columns: columns,\n    data: data,\n    isMultiSortEvent: () => true //now no need to hold `shift` key to multi-sort\n    ,\n    initialState: {\n      sorting: [{\n        id: 'status',\n        desc: false\n      },\n      //then sort by city in descending order by default\n      {\n        id: 'uid',\n        desc: false\n      } //sort by state in ascending order by default\n      ]\n    },\n\n    renderTopToolbarCustomActions: _ref => {\n      let {\n        table\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => table.resetSorting(true),\n        children: \"Clear All Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_c = SortTable;\nexport default SortTable;\nvar _c;\n$RefreshReg$(_c, \"SortTable\");","map":{"version":3,"names":["MaterialReactTable","Button","React","columns","accessorKey","header","sortDescFirst","SortTable","data","sorting","id","desc","table","resetSorting"],"sources":["/home/test/Desktop/Anil-Inventory-Management-Tool/client/src/show/SortTable.js"],"sourcesContent":["import MaterialReactTable, { type MRT_ColumnDef } from 'material-react-table';\r\nimport { Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype all_page = {\r\n  UID: string;\r\n  Product_Name: string;\r\n  Family: string;\r\n  Status: string;\r\n  Model: string;\r\n  Vendor: string;\r\n  Type: string;\r\n  Speed: string;\r\n  Distance: string;\r\n  Wavelength: string;\r\n  Interface: string;\r\n  Item: string;\r\n};\r\n\r\nconst columns: MRT_ColumnDef<Person>[] = [\r\n  {\r\n    accessorKey: 'UID',\r\n    header: 'UID',\r\n    sortDescFirst: false, \r\n  },\r\n  {\r\n    accessorKey: 'Product_Name',\r\n    header: 'Product_Name',\r\n    sortDescFirst: false, \r\n  },\r\n  {\r\n    accessorKey: 'Family',\r\n    header: 'Family',\r\n  },\r\n  {\r\n    accessorKey: 'Status',\r\n    header: 'Status',\r\n    sortDescFirst: false, \r\n  },\r\n  {\r\n    accessorKey: 'Model',\r\n    header: 'Model',\r\n  },\r\n  {\r\n    accessorKey: 'Vendor',\r\n    header: 'Vendor',\r\n  },\r\n  {\r\n    accessorKey: 'Type',\r\n    header: 'Type',\r\n  },\r\n  {\r\n    accessorKey: 'Speed',\r\n    header: 'Speed',\r\n    sortDescFirst: false, \r\n  },\r\n  {\r\n    accessorKey: 'Distance',\r\n    header: 'Distance',\r\n  },\r\n  {\r\n    accessorKey: 'Wavelength',\r\n    header: 'Wavelength',\r\n  },\r\n  {\r\n    accessorKey: 'Interface',\r\n    header: 'Interface',\r\n  },\r\n  {\r\n    accessorKey: 'Item',\r\n    header: 'Item',\r\n  },\r\n];\r\n\r\nconst SortTable = (data) => {\r\n    return (\r\n        <MaterialReactTable\r\n        columns={columns}\r\n        data={data}\r\n        isMultiSortEvent={() => true} //now no need to hold `shift` key to multi-sort\r\n        initialState={{\r\n            sorting: [\r\n            { id: 'status', desc: false }, //then sort by city in descending order by default\r\n            { id: 'uid', desc: false }, //sort by state in ascending order by default\r\n            ],\r\n        }}\r\n        renderTopToolbarCustomActions={({ table }) => (\r\n            <Button onClick={() => table.resetSorting(true)}>\r\n            Clear All Sorting\r\n            </Button>\r\n        )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SortTable;\r\n    "],"mappings":";AAAA,OAAOA,kBAAkB,MAA8B,sBAAsB;AAC7E,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAiB1B,MAAMC,OAAgC,GAAG,CACvC;EACEC,WAAW,EAAE,KAAK;EAClBC,MAAM,EAAE,KAAK;EACbC,aAAa,EAAE;AACjB,CAAC,EACD;EACEF,WAAW,EAAE,cAAc;EAC3BC,MAAM,EAAE,cAAc;EACtBC,aAAa,EAAE;AACjB,CAAC,EACD;EACEF,WAAW,EAAE,QAAQ;EACrBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,QAAQ;EACrBC,MAAM,EAAE,QAAQ;EAChBC,aAAa,EAAE;AACjB,CAAC,EACD;EACEF,WAAW,EAAE,OAAO;EACpBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,QAAQ;EACrBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,MAAM;EACnBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,OAAO;EACpBC,MAAM,EAAE,OAAO;EACfC,aAAa,EAAE;AACjB,CAAC,EACD;EACEF,WAAW,EAAE,UAAU;EACvBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,YAAY;EACzBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,WAAW;EACxBC,MAAM,EAAE;AACV,CAAC,EACD;EACED,WAAW,EAAE,MAAM;EACnBC,MAAM,EAAE;AACV,CAAC,CACF;AAED,MAAME,SAAS,GAAIC,IAAI,IAAK;EACxB,oBACI,QAAC,kBAAkB;IACnB,OAAO,EAAEL,OAAQ;IACjB,IAAI,EAAEK,IAAK;IACX,gBAAgB,EAAE,MAAM,IAAK,CAAC;IAAA;IAC9B,YAAY,EAAE;MACVC,OAAO,EAAE,CACT;QAAEC,EAAE,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAM,CAAC;MAAE;MAC/B;QAAED,EAAE,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAM,CAAC,CAAE;MAAA;IAEhC,CAAE;;IACF,6BAA6B,EAAE;MAAA,IAAC;QAAEC;MAAM,CAAC;MAAA,oBACrC,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMA,KAAK,CAACC,YAAY,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvC;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAC,KAnBIN,SAAS;AAqBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}