{"ast":null,"code":"var _jsxFileName = \"/home/test/Desktop/aimt/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Menu from \"./menu/Menu\";\nimport Login from \"./login/Login\";\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 2. Create our *dogImage* variable as well as the *setDogImage* function via useState\n  // We're setting the default value of dogImage to null, so that while we wait for the\n  // fetch to complete, we dont attempt to render the image\n  // let [APItext, setAPItext] = useState(null)\n  const [token, setToken] = useState();\n  // 3. Create out useEffect function\n  // useEffect(() => {\n  //   fetch(\"/api\")\n  //   .then(response => response.text())\n  //       // 4. Setting *dogImage* to the image url that we received from the response above\n  //   .then(text => setAPItext(text))\n  // },[]);\n  // console.log(APItext);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2b1Gw51qdmmjpiYzw8hh0YVh/kM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Menu","Login","Routes","Route","App","token","setToken"],"sources":["/home/test/Desktop/aimt/client/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\nimport Menu from \"./menu/Menu\";\nimport Login from \"./login/Login\";\nimport { Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  // 2. Create our *dogImage* variable as well as the *setDogImage* function via useState\n    // We're setting the default value of dogImage to null, so that while we wait for the\n    // fetch to complete, we dont attempt to render the image\n  // let [APItext, setAPItext] = useState(null)\n  const [token, setToken] = useState();\n    // 3. Create out useEffect function\n  // useEffect(() => {\n  //   fetch(\"/api\")\n  //   .then(response => response.text())\n  //       // 4. Setting *dogImage* to the image url that we received from the response above\n  //   .then(text => setAPItext(text))\n  // },[]);\n  // console.log(APItext);\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/\" element={<Menu />} />\n        {/* <Route path=\"/login\" element={<Login />} /> */}\n      </Routes>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb;EACE;EACA;EACF;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAE;EAClC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAG,CAACM,KAAK,EAAE;IACT,oBAAO,QAAC,KAAK;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EACtC;EAEA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,uBACtB,QAAC,MAAM;MAAA,uBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAE9B;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA1BQF,GAAG;AAAA,KAAHA,GAAG;AA4BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}