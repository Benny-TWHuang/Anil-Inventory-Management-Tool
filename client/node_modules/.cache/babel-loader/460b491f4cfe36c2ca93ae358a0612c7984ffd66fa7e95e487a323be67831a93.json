{"ast":null,"code":"var _jsxFileName = \"/home/test/Desktop/Anil-Inventory-Management-Tool/client/src/rules/Rules.js\",\n  _s = $RefreshSig$();\nimport './Rules.css';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Rules(props) {\n  _s();\n  let graphImage = require(`${props.img_path}`);\n  let rule_text = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  let bc = \"\";\n  if (props.cate === \"Borrow\") {\n    rule_text = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Borrow Cases\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Case 1 - NICs/Modules/Cables(Return on the same day)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \">>\", \" No need to update in AIMT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Case 2 - NICs/Modules/Cables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \">>\", \" Update in AIMT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Case3 - Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \">>\", \" Update in AIMT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Case4 - AIMT owner is not in seat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \">>\", \"  IM AIMT owner first, or inform AIMT owner by mail\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true);\n    bc = \"Borrow Rules\";\n  } else {\n    rule_text = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Return Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"AIMT owner check with borrower if NIC is functional or not\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \">>\", \" If broken, please update in AIMT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true);\n    bc = \"Return Rules\";\n  }\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bread\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          href: \"/menu \",\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          href: \"/guide \",\n          children: \"User Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          active: true,\n          children: bc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"rules-title\",\n      children: [\"ANIL Inventory Management Tool \", props.cate, \" Rules\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: graphImage,\n        className: \"rules_image\",\n        alt: props.cate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner rounded rules_image\",\n        children: rule_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        navigate(\"/\");\n      },\n      variant: \"primary rule-btn\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n// Return Rule\n// AIMT owner check with borrower if NIC is functional or not\n//          >> If broken, please update in AIMT\n_s(Rules, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Rules;\nvar _c;\n$RefreshReg$(_c, \"Rules\");","map":{"version":3,"names":["Breadcrumb","useNavigate","Button","Rules","props","graphImage","require","img_path","rule_text","bc","cate","navigate"],"sources":["/home/test/Desktop/Anil-Inventory-Management-Tool/client/src/rules/Rules.js"],"sourcesContent":["import './Rules.css';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nexport default function Rules(props) {\n  let graphImage = require(`${props.img_path}`);\n\n  let rule_text = <></>;\n  let bc = \"\";\n  if(props.cate === \"Borrow\") {\n    rule_text = <>\n                  <h3>Borrow Cases</h3>\n                  <h6>Case 1 - NICs/Modules/Cables(Return on the same day)</h6>\n                  <h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\">>\"} No need to update in AIMT</h6>\n                  <h6>Case 2 - NICs/Modules/Cables</h6>\n                  <h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\">>\"} Update in AIMT</h6>\n                  <h6>Case3 - Tools</h6>\n                  <h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\">>\"} Update in AIMT</h6>\n                  <h6>Case4 - AIMT owner is not in seat</h6>\n                  <h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\">>\"}  IM AIMT owner first, or inform AIMT owner by mail</h6>\n                </>\n    bc = \"Borrow Rules\";\n  } else {\n    rule_text = <>\n                  <h3>Return Rule</h3>\n                  <h6>AIMT owner check with borrower if NIC is functional or not</h6>\n                  <h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\">>\"} If broken, please update in AIMT</h6>\n                </>\n    bc = \"Return Rules\";\n  }\n  let navigate = useNavigate(); \n  return (\n    <div className=\"App\">\n      <div className=\"bread\">\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"/menu \">Menu</Breadcrumb.Item>\n          <Breadcrumb.Item href=\"/guide \">User Guide</Breadcrumb.Item>\n          <Breadcrumb.Item active>{bc}</Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      <header className=\"rules-title\">ANIL Inventory Management Tool {props.cate} Rules</header>\n      <div className=\"outer\">\n        <img src={graphImage} className=\"rules_image\" alt={props.cate} />\n        <div className=\"inner rounded rules_image\">          \n          {rule_text}\n        </div>\n      </div>\n      <Button onClick={()=>{navigate(\"/\");}} variant=\"primary rule-btn\">Back</Button>\n    </div>\n  );\n  \n}\n\n// Return Rule\n// AIMT owner check with borrower if NIC is functional or not\n//          >> If broken, please update in AIMT\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}