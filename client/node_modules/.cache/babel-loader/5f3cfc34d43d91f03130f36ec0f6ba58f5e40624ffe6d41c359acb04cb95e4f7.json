{"ast":null,"code":"var _jsxFileName = \"/home/test/Desktop/aimt/client/src/show/Show.js\",\n  _s = $RefreshSig$();\nimport './Show.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Show(props) {\n  _s();\n  const renderAfterCalled = React.useRef(false);\n  let showing_data;\n  React.useEffect(() => {\n    if (!renderAfterCalled.current) {\n      async function getting() {\n        await fetch('http://localhost:5000/show', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            ask: props.value\n          })\n        }).then(response => showing_data = response.json()).then(data => console.log(data));\n      }\n    }\n    renderAfterCalled.current = true;\n  }, [props]);\n  let showtitle = \"\";\n  if (props.value.substring(0, 3) === \"ada\") {\n    showtitle = \"Series \" + props.value.substring(3);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-title\",\n      children: showtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: showing_data.map((items, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: items.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item.UID\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Show, \"Ka/KnUYBhK8GSGOsSuXGghnYzfc=\");\n_c = Show;\nvar _c;\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["React","Show","props","renderAfterCalled","useRef","showing_data","useEffect","current","getting","fetch","method","headers","body","JSON","stringify","ask","value","then","response","json","data","console","log","showtitle","substring","map","items","i","item","UID"],"sources":["/home/test/Desktop/aimt/client/src/show/Show.js"],"sourcesContent":["import './Show.css';\nimport React from 'react';\n\nexport default function Show(props) {\n  const renderAfterCalled = React.useRef(false);\n  let showing_data;\n  React.useEffect(\n  () => {\n    if (!renderAfterCalled.current) {\n      async function getting() {\n        await fetch('http://localhost:5000/show', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ask: props.value})\n        })\n        .then(response => showing_data=response.json())\n        .then(data => console.log(data))\n      }\n    }\n\n    renderAfterCalled.current = true;\n  }, [props]) \n\n  let showtitle = \"\";\n  if(props.value.substring(0, 3) === \"ada\"){\n    showtitle = \"Series \"+props.value.substring(3)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-title\">{showtitle}</header>\n      <div className=\"App-header\">\n        <ul>\n          { \n            showing_data.map((items, i) => {      \n              return <div>{ \n                items.map((item, i) => {\n                  return <li key={i}>{item.UID}</li>\n                })  }\n                </div>\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  );\n  \n}\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAClC,MAAMC,iBAAiB,GAAGH,KAAK,CAACI,MAAM,CAAC,KAAK,CAAC;EAC7C,IAAIC,YAAY;EAChBL,KAAK,CAACM,SAAS,CACf,MAAM;IACJ,IAAI,CAACH,iBAAiB,CAACI,OAAO,EAAE;MAC9B,eAAeC,OAAO,GAAG;QACvB,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACxCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAACC,GAAG,EAAEb,KAAK,CAACc;UAAK,CAAC;QACzC,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIb,YAAY,GAACa,QAAQ,CAACC,IAAI,EAAE,CAAC,CAC9CF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;MAClC;IACF;IAEAjB,iBAAiB,CAACI,OAAO,GAAG,IAAI;EAClC,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,IAAIqB,SAAS,GAAG,EAAE;EAClB,IAAGrB,KAAK,CAACc,KAAK,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAC;IACvCD,SAAS,GAAG,SAAS,GAACrB,KAAK,CAACc,KAAK,CAACQ,SAAS,CAAC,CAAC,CAAC;EAChD;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,SAAS,EAAC,WAAW;MAAA,UAAED;IAAS;MAAA;MAAA;MAAA;IAAA,QAAU,eAClD;MAAK,SAAS,EAAC,YAAY;MAAA,uBACzB;QAAA,UAEIlB,YAAY,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;UAC7B,oBAAO;YAAA,UACLD,KAAK,CAACD,GAAG,CAAC,CAACG,IAAI,EAAED,CAAC,KAAK;cACrB,oBAAO;gBAAA,UAAaC,IAAI,CAACC;cAAG,GAAZF,CAAC;gBAAA;gBAAA;gBAAA;cAAA,QAAiB;YACpC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACI;QACV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IAED;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAGV;AAAC,GA9CuB1B,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}